#define  _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>

int main()//数据的组织形式
{
	int a = 10000;
	FILE* pf= fopen("test.txt ","wb");
	fwrite(&a, 4, 1, pf);//二进制的形式写到文件中
	fclose(pf);
	pf = NULL;

	return 0;
}

struct _iobuf//FILE结构体
{
	char *_ptr;
    int _cnt;
	char *_base;
    int fIag;
    int file;
	int _charbuf;
    int _bufsiz;
    char *_tmpfname;
};
typedef struct _iobuf FILE;

int main()
{
	//打开文件test. txt
	//相对路径
	//..表示上一级路径
	//.表示当前路径
	// fopen("../../test.txt","r");
	// fopen("test.txt"，"r");
	//绝对路径的写法
	// fopen("C:\\2020_code\\84班\\test_5_6\\test_5_6\\test.txt","r");
	FILE* pf = fopen("test.txt","r");//"r" 无指定文件出错  "w"无指定文件重新创建
	if (pf == NULL)
	{
		printf("%s\n",strerror(errno));
		return 0;
    }
    //打开成功
	//读文件


    //关闭文件
	fclose(pf);
	pf = NULL;

    return 0;
}

int main()//字符输出函数fputc函数使用
{
	FILE* pfWrite = fopen("test.txt", "w");
	if (pfWrite == NULL)
	{
		printf("%s\n", strerror(errno));
		return 0;
	}
	//写文件
	fputc('b', pfWrite);
	fputc('i', pfWrite);
	fputc('t', pfWrite);
	//关闭文件
	fclose(pfWrite);
	pfWrite = NULL;

	return 0;
}

int main()//字符输入函数fgetc函数使用
{
	FILE* pfRead = fopen("test.txt","r");
	if (pfRead == NULL)
	{
		printf("%s\n", strerror(errno));
		return 0;
	}
	//读文件
	printf("%c",fgetc(pfRead));//b
	printf("%c",fgetc(pfRead));//i
	printf("%c",fgetc(pfRead));//t
	// 关闭文件
	fclose(pfRead);
	pfRead = NULL;

	return 0;
}

int main()
{
	int ch = fgetc(stdin);//字符输入
	fputc(ch,stdout);//字符输出
	return 0;
}

从键盘输入
输出到屏幕
键盘&屏幕都是外部设备
键盘 - 标准输入设备 - stdin
屏幕 - 标准输出设备 - stdout
是一个程序默认打开的两个流设备
stdin FILE*
stdout FILE*
stderr FILE*

int main()//文本输入函数fgets函数使用
{
	char buf[1024] = { 0 };
	FILE* pf = fopen("test.txt", "r");
	if (pf == NULL)
	{
		return 0;
	}
	//读文件
	fgets(buf, 1024, pf);//文本行输入
	//printf("%s", buf);
	puts(buf);
	fgets(buf, 1024, pf);
	//printf("%s",buf);
	puts(buf);//两种写法等同

	fclose(pf);
	pf = NULL;
	return 0;
}

int main()//文本输出函数fputs函数使用
{
	char buf[1024] = { 0 };
	FILE* pf = fopen("test.txt", "w");
	if (pf == NULL)
	{
		return 0;
	}
	//写文件
	fputs("hello\n", pf);
	fputs("world \n", pf);

	fclose(pf);
	pf = NULL;

	return 0;
}

struct S
{
	int n;
	float score;
	char arr[10];
};
int main()
{
	struct S s = { 100, 3.14f, "bit" };
	FILE* pf = fopen("test.txt", "w");
	if (pf == NULL)
	{
		return 0;
	}
	//格式化的形式写文件
	fprintf(pf,"%d %f %s", s.n, s.score, s.arr);

	fclose(pf);
	pf = NULL;
	return 0;
}
