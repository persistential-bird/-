#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main()
{
	//数组名是首元素的地址
	//1.sizeof(数组名) - 数组名表示整个数组
	//2.& 数组名 - 数组名表示整个数组
	
	//一维数组
	int a[] = { 1,2,3,4 };// 4 * 4 = 16
	printf("%d\n", sizeof(a));//sizeof(数组名)-计算的是数组总大小-单位是字节-16
	printf("%d\n",sizeof(a + 0));//4/8  数组名这里表示收元素的值，a+0还是首元素地址，地址的大小就是4/8个字节
	printf("%d\n",sizeof(*a));//4–数组名表示首元素地址，*a就是首元素，sizeof(*a)就是4
	printf("%d\n",sizeof(a + 1));//4/8-数组名这里表示收元素的值,a+1第2个元素的地址，地址的大小就是4/8个字节
	printf("%d\n", sizeof(a[4])); //T14一第2个元素的大小
	printf("%d\n",sizeof(&a));//4/8 &a取出的是数组的地址，但是数组的地址那也是地址，地址的大小就是4/8个字节
	printf("%d\n",sizeof(*&a));//16- &a数组的地址，数组的地址解引用访问的数组, sizeof计算的就是数组的大小单位是字节
	printf("%d\n",sizeof(&a + 1));//4/8 &a是数组的地址，&a+1虽然地址跳过整个数组，但还是地址，所以是4/8个字节
	printf("%d\n", sizeof(&a[0]));//4/8 &a[0]是第一个元素的地士址
	printf("%d\n", sizeof(&a[0] + 1));//4/8 &a[0]+1是第二个元素的地址
	

	 //字符数组
	char arr[] = { 'a', 'b', 'c', 'd', 'e','f'};
	printf("%d\n", strlen(arr));//随机值
	printf("%d\n", strlen(arr + 0));//随机值
	//printf("%d\n",strlen( "ar));//err
	//pnintf("%d\n", strlen(arr[11));// err
	printf("%d\n", strlen(&arr));//随机值
	printf("%d\n", strlen(&arr + 1));//随机值-6
	printf("%d\n", strlen(&arr[0] +1));//随机值-1

	char arr[]={'a','b','c', 'd ', 'e','f'};
	char arr[] = "abcdef";
	printf("%d\n",sizeof(arr));//7 sizeof(arr)计算的是数组的大小，单位是字节
        printf("%d\n",sizeof(arr + 0));//4/8计首的是地址的大小-arr+0是首元素的地址
	printf("%d\n",sizeof(*arr)); //1 *arr是首元素，sizeofC*anr)计算首元素的大小
        printf("%d\n",sizeof(arr[1]));//1 arr[1]是第二个元素,sizeof(arr[1])计算的是第二个元素的大小
        printf("%d\n",sizeof(&arr)); //4/8 &arr虽然是数组的地址，但也是地址。所以是4/8个字节
	printf("%d\n",sizeof(&arr+1));//4/8 &arr+1是跳过整个数组后的地址，但也是地址
	printf("%d\n",sizeof（&arr[0] + 1））;// 4 / 8 & arn[0] + 1 第二个元素的地址

	return 0;
}
